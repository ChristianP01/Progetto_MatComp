(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      7511,        185]
NotebookOptionsPosition[      6814,        165]
NotebookOutlinePosition[      7248,        182]
CellTagsIndexPosition[      7205,        179]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Code",
 CellChangeTimes->{{3.892621033638291*^9, 3.8926210449536467`*^9}, {
  3.8926286729392776`*^9, 3.892628673681201*^9}, {3.89262877358202*^9, 
  3.8926287780286427`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"96aa7e3f-05b8-4a39-a181-8d3c2c56c256"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", " ", "GeneralOracleBack`"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "ItalianActorPreprocessing`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "CheckForm`"}], "\n", 
 RowBox[{"<<", " ", "Frontend`"}]}], "Code",
 CellChangeTimes->{{3.892621078361706*^9, 3.892621095849674*^9}, {
   3.892622202260297*^9, 3.892622270345435*^9}, {3.892622325118268*^9, 
   3.892622328547227*^9}, {3.8926224106210203`*^9, 3.892622411115341*^9}, {
   3.8926248565083857`*^9, 3.89262487109225*^9}, {3.89262513938144*^9, 
   3.8926251397685423`*^9}, {3.89262866842148*^9, 3.892628668869989*^9}, {
   3.892629149113268*^9, 3.892629211285699*^9}, {3.89262951428176*^9, 
   3.892629514762271*^9}, {3.892711731236623*^9, 3.892711742697357*^9}, 
   3.893145632382592*^9, {3.893146046137656*^9, 3.893146050770485*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"35d58db8-440f-4e81-a654-cd302ffa4d67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showFrontend", "[", "]"}]], "Code",
 CellChangeTimes->{{3.893145759638834*^9, 3.893145762429737*^9}, {
  3.89314602486852*^9, 3.893146041629634*^9}, {3.893146087098629*^9, 
  3.8931460899530563`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2ca300b5-a596-4fc8-a5d4-72f6e0eaf4aa"],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      InputFieldBox[Dynamic[$CellContext`inputActor1], String,
       FieldHint->"Inserisci il primo attore..."], 
      InputFieldBox[Dynamic[$CellContext`inputActor2], String,
       FieldHint->"Inserisci il secondo attore..."], 
      InputFieldBox[Dynamic[$CellContext`answer], Number,
       FieldHint->"Indovina la distanza..."], 
      InputFieldBox[Dynamic[$CellContext`seed], Number,
       FieldHint->"Scegli un seed..."]},
     {
      ButtonBox[
       StyleBox["\<\"Calcola\"\>",
        StripOnInput->False,
        FontSize->Medium],
       Appearance->Automatic,
       ButtonFunction:>($CellContext`inputActor1 = 
         CheckForm`InputCorrection[$CellContext`inputActor1]; \
$CellContext`inputActor2 = 
         CheckForm`InputCorrection[$CellContext`inputActor2]; \
$CellContext`cfOutput = 
         CheckForm`CheckForm[$CellContext`gr, $CellContext`inputActor1, \
$CellContext`inputActor2]; If[
          StringQ[$CellContext`cfOutput], 
          CreateDialog[{
            TextCell[$CellContext`cfOutput], 
            DefaultButton[]}, WindowSize -> {300, 70}], $CellContext`sp = 
           GeneralOracleBack`CalcShortestPath[$CellContext`gr, \
$CellContext`inputActor1, $CellContext`inputActor2]; Print[
            GeneralOracleBack`displaySolution[$CellContext`sp]]; Null]),
       Evaluator->Automatic,
       ImageSize->{100, 50},
       Method->"Preemptive"], 
      ButtonBox[
       StyleBox["\<\"Reset\"\>",
        StripOnInput->False,
        FontSize->Medium],
       Appearance->Automatic,
       ButtonFunction:>($CellContext`inputActor1 = ($CellContext`inputActor2 = 
          Null); $CellContext`answer = Null; $CellContext`seed = Null; Null),
       Evaluator->Automatic,
       ImageSize->{100, 50},
       Method->"Preemptive"], 
      ButtonBox[
       StyleBox["\<\"Indovina\"\>",
        StripOnInput->False,
        FontSize->Medium],
       Appearance->Automatic,
       ButtonFunction:>(Which[
          Not[
           NumberQ[$CellContext`answer]], CreateDialog[{
             TextCell[
             "\[CapitalEGrave] necessario inserire un numero per provare ad \
indovinare."], 
             DefaultButton[]}, WindowSize -> {300, 70}]; Null, 
          True, $CellContext`inputActor1 = 
           CheckForm`InputCorrection[$CellContext`inputActor1]; \
$CellContext`inputActor2 = 
           CheckForm`InputCorrection[$CellContext`inputActor2]; \
$CellContext`cfOutput = 
           CheckForm`CheckForm[$CellContext`gr, $CellContext`inputActor1, \
$CellContext`inputActor2]; If[
            StringQ[$CellContext`cfOutput], 
            CreateDialog[{
              TextCell[$CellContext`cfOutput], 
              DefaultButton[]}, WindowSize -> {300, 70}], $CellContext`sp = 
             GeneralOracleBack`CalcShortestPath[$CellContext`gr, \
$CellContext`inputActor1, $CellContext`inputActor2]; Null]; 
          If[$CellContext`answer == Length[
               Part[$CellContext`sp, "entityPath"]] - 1, CreateDialog[{
               TextCell["Complimenti, hai indovinato!"], 
               DefaultButton[]}, WindowSize -> {300, 70}]; Null, CreateDialog[{
               TextCell["Peccato, risposta errata!"], 
               DefaultButton[]}, WindowSize -> {300, 70}]; Null]]; Null),
       Evaluator->Automatic,
       ImageSize->{100, 50},
       Method->"Preemptive"], 
      ButtonBox[
       StyleBox["\<\"Casuale\"\>",
        StripOnInput->False,
        FontSize->Medium],
       Appearance->Automatic,
       ButtonFunction:>Which[
         Not[
          NumberQ[$CellContext`seed]], CreateDialog[{
            TextCell[
            "\[CapitalEGrave] necessario inserire un seed per generare \
risultati casuali."], 
            DefaultButton[]}, WindowSize -> {300, 70}]; Null, 
         True, $CellContext`re = 
          GeneralOracleBack`RandomExtract[$CellContext`gr, $CellContext`seed]; \
$CellContext`inputActor1 = Part[$CellContext`re, 1]; $CellContext`inputActor2 = 
          Part[$CellContext`re, 2]; Null],
       Evaluator->Automatic,
       ImageSize->{100, 50},
       Method->"Preemptive"]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{1}}}],
   "Grid"],
  ImageSize->{900, 200}]], "Output",
 CellChangeTimes->{{3.8931460905241137`*^9, 3.893146093581628*^9}, 
   3.89314614871579*^9, {3.893146255712008*^9, 3.8931462579531717`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"05ec2182-17a4-4883-9350-9eab235b6e95"]
}, Open  ]]
},
WindowSize->{1440, 747},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Linux x86 (64-bit) (January 31, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f0a40eb4-f91c-4156-819c-a22d067d8762"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 299, 5, 51, "Code",ExpressionUUID->"96aa7e3f-05b8-4a39-a181-8d3c2c56c256"],
Cell[860, 27, 1047, 18, 132, "Code",ExpressionUUID->"35d58db8-440f-4e81-a654-cd302ffa4d67"],
Cell[CellGroupData[{
Cell[1932, 49, 302, 5, 51, "Code",ExpressionUUID->"2ca300b5-a596-4fc8-a5d4-72f6e0eaf4aa"],
Cell[2237, 56, 4561, 106, 219, "Output",ExpressionUUID->"05ec2182-17a4-4883-9350-9eab235b6e95"]
}, Open  ]]
}
]
*)


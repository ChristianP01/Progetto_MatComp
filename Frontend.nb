(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16071,        407]
NotebookOptionsPosition[     13563,        353]
NotebookOutlinePosition[     13997,        370]
CellTagsIndexPosition[     13954,        367]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Progetto d\[CloseCurlyQuote]esame di Matematica Computazionale, Universit\
\[AGrave] di Bologna, a.a. 2022/2023\
\>", "Title",
 CellChangeTimes->{{3.893235576485714*^9, 3.893235612057968*^9}, 
   3.893235650043154*^9, {3.893236547525814*^9, 
   3.89323657171355*^9}},ExpressionUUID->"3009b2f4-301e-4fba-a648-\
5c205258bf66"],

Cell["\<\
Michele Bianco, Chiara Mengoli, Akira Petrolini, Christian Preti, Riccardo \
Scotti\
\>", "Subtitle",
 CellChangeTimes->{{3.893235576485714*^9, 
  3.8932356903851557`*^9}},ExpressionUUID->"9a04fdf7-003b-4472-98a5-\
27c811e52c95"],

Cell[CellGroupData[{

Cell["Descrizione del progetto", "Section",
 CellChangeTimes->{{3.893235719457225*^9, 
  3.893235741540801*^9}},ExpressionUUID->"87b13a26-9a99-4cf4-9ee6-\
04659ff4ee8e"],

Cell["\<\
Il progetto \[EGrave] un\[CloseCurlyQuote]implementazione nel linguaggio \
Mathematica dell\[CloseCurlyQuote]Oracolo di Bacon \
(https://oracleofbacon.org/).\[LineSeparator]L\[CloseCurlyQuote]Oracolo di \
Bacon \[EGrave] in grado, dati nome e cognome di due attori, di fornire all\
\[CloseCurlyQuote]utente la \[OpenCurlyDoubleQuote]distanza\
\[CloseCurlyDoubleQuote] tra di essi, oltre che il percorso che li collega.  
Nel nostro progetto abbiamo utilizzato un database di 10.000 attori, filtrato \
solo su film in lingua originale italiana, e offriamo \
all\[CloseCurlyQuote]utente finale la possibilit\[AGrave] di utilizzare su di \
esso 4 funzionalit\[AGrave] a partire da un men\[UGrave] con 4 input e 4 \
bottoni.\
\>", "Text",
 CellChangeTimes->{{3.8932358207466*^9, 3.893235874241817*^9}, {
   3.893235980484462*^9, 3.893236029686389*^9}, {3.893236104220552*^9, 
   3.8932361199330263`*^9}, {3.8932361946341133`*^9, 3.893236337263832*^9}, {
   3.893236414452976*^9, 3.893236442690774*^9}, 3.893237843876914*^9, {
   3.8932378824350557`*^9, 
   3.893237891131298*^9}},ExpressionUUID->"f084fac3-fe91-47cd-ae2c-\
53792a18ac82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Celle di input", "Section",
 CellChangeTimes->{{3.893236450751597*^9, 
  3.893236465610218*^9}},ExpressionUUID->"7e97bb09-1829-43ec-b7ca-\
666a6d97d2ea"],

Cell["Le celle di input sono ottenute con un DynamicModule bla bla", "Text",
 CellChangeTimes->{{3.893236511959878*^9, 3.8932365386316423`*^9}, {
  3.8932365924621077`*^9, 
  3.893236598521015*^9}},ExpressionUUID->"3f4be705-ac79-44f3-85da-\
4cbf163d1876"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Funzionalit\[AGrave]", "Section",
 CellChangeTimes->{{3.893236606250127*^9, 
  3.8932366186173353`*^9}},ExpressionUUID->"0ace0b0a-644a-4228-b477-\
4e836d644b4f"],

Cell[CellGroupData[{

Cell["Calcola", "Subsection",
 CellChangeTimes->{{3.893236637487542*^9, 
  3.893236739737768*^9}},ExpressionUUID->"2c477141-b0c1-4f62-90ab-\
f8180c593ee7"],

Cell["blabla", "Text",
 CellChangeTimes->{{3.893236742875012*^9, 
  3.893236756850257*^9}},ExpressionUUID->"ca9f17e1-f89d-454d-b7e0-\
ffa3c7c7d3a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reset", "Subsection",
 CellChangeTimes->{{3.893236764391839*^9, 
  3.893236765283536*^9}},ExpressionUUID->"662e80ad-7090-4b9a-b3e9-\
f63b77a8d5b6"],

Cell["blabla", "Text",
 CellChangeTimes->{{3.893236774489708*^9, 3.893236787864653*^9}, 
   3.893236870174326*^9},ExpressionUUID->"3c95bbb4-2d59-42d8-8980-\
2ac842429277"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indovina", "Subsection",
 CellChangeTimes->{{3.893236865126842*^9, 
  3.8932368819778223`*^9}},ExpressionUUID->"d7be7479-0b0f-4832-b24b-\
375187218438"],

Cell["blabla", "Text",
 CellChangeTimes->{{3.893236937723926*^9, 
  3.8932369385535173`*^9}},ExpressionUUID->"9e7a8cb4-4d1d-488e-bd65-\
8f29c5e63f2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Casuale", "Subsection",
 CellChangeTimes->{{3.893236950594796*^9, 
  3.893236951686653*^9}},ExpressionUUID->"9d2d0105-cfb9-4fce-9a9f-\
503a6a1b12f7"],

Cell["blabla", "Text",
 CellChangeTimes->{{3.8932369580647907`*^9, 3.893236959013611*^9}, {
  3.893237323638069*^9, 
  3.893237348052678*^9}},ExpressionUUID->"4b4a77e2-4bbd-4016-84a6-\
a45d9897f190"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Codice e Men\[UGrave]", "Section",
 CellChangeTimes->{{3.893237340940942*^9, 3.893237342584529*^9}, {
  3.893237616098351*^9, 
  3.893237620948457*^9}},ExpressionUUID->"7f347ff3-cdf0-46be-9dc7-\
3b90649750f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Termuinazione", " ", "di", " ", "una", " ", "sessione", " ", "di", " ", 
    "Wolfram", " ", "Language", " ", 
    RowBox[{"kernel", "."}]}], "*)"}]}]], "Code",
 CellChangeTimes->{{3.892621033638291*^9, 3.8926210449536467`*^9}, {
   3.8926286729392776`*^9, 3.892628673681201*^9}, {3.89262877358202*^9, 
   3.8926287780286427`*^9}, {3.893237357034738*^9, 3.8932374045186*^9}, 
   3.893237472468752*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"96aa7e3f-05b8-4a39-a181-8d3c2c56c256"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Import", " ", "dei", " ", 
     RowBox[{"file", " ", ".", "wl"}]}], ",", " ", 
    RowBox[{
    "contenenti", " ", "le", " ", "funzioni", " ", "necessarie", " ", 
     RowBox[{"all", "'"}], "esecuzione", " ", "del", " ", 
     RowBox[{"programma", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", " ", "GeneralOracleBack`"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "ItalianActorPreprocessing`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "CheckForm`"}], "\n", 
 RowBox[{"<<", " ", "Frontend`"}]}], "Code",
 CellChangeTimes->{{3.892621078361706*^9, 3.892621095849674*^9}, {
   3.892622202260297*^9, 3.892622270345435*^9}, {3.892622325118268*^9, 
   3.892622328547227*^9}, {3.8926224106210203`*^9, 3.892622411115341*^9}, {
   3.8926248565083857`*^9, 3.89262487109225*^9}, {3.89262513938144*^9, 
   3.8926251397685423`*^9}, {3.89262866842148*^9, 3.892628668869989*^9}, {
   3.892629149113268*^9, 3.892629211285699*^9}, {3.89262951428176*^9, 
   3.892629514762271*^9}, {3.892711731236623*^9, 3.892711742697357*^9}, 
   3.893145632382592*^9, {3.893146046137656*^9, 3.893146050770485*^9}, {
   3.893237416138302*^9, 3.893237469516453*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"35d58db8-440f-4e81-a654-cd302ffa4d67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"showFrontend", "[", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Funzione", " ", "che", " ", "stampa", " ", "a", " ", "schermo", " ", "il",
     " ", 
    RowBox[{"men\[UGrave]", "."}]}], "*)"}]}]], "Code",
 CellChangeTimes->{{3.8931491502053003`*^9, 3.8931491514582*^9}, {
  3.893237451451663*^9, 3.893237466519153*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"b4360295-0fd5-4bef-af1c-ecb041d72112"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`inputActor1$$ = 
  "David Hemmings", $CellContext`inputActor2$$ = 
  "Victor Buono", $CellContext`answer$$ = -4, $CellContext`seed$$ = 
  433, $CellContext`cfOutput$$, $CellContext`sp$$, $CellContext`re$$ = {
  "David Hemmings", "Victor Buono"}}, 
  PanelBox[
   TagBox[GridBox[{
      {
       InputFieldBox[Dynamic[$CellContext`inputActor1$$], String,
        FieldHint->"Inserisci il primo attore..."], 
       InputFieldBox[Dynamic[$CellContext`inputActor2$$], String,
        FieldHint->"Inserisci il secondo attore..."], 
       InputFieldBox[Dynamic[$CellContext`answer$$], Number,
        FieldHint->"Indovina la distanza..."], 
       InputFieldBox[Dynamic[$CellContext`seed$$], Number,
        FieldHint->"Scegli un seed..."]},
      {
       ButtonBox[
        StyleBox["\<\"Calcola\"\>",
         StripOnInput->False,
         FontSize->Medium],
        Appearance->Automatic,
        ButtonFunction:>($CellContext`inputActor1$$ = 
          CheckForm`InputCorrection[$CellContext`inputActor1$$]; \
$CellContext`inputActor2$$ = 
          CheckForm`InputCorrection[$CellContext`inputActor2$$]; \
$CellContext`cfOutput$$ = 
          CheckForm`CheckForm[$CellContext`gr, $CellContext`inputActor1$$, \
$CellContext`inputActor2$$]; If[
           StringQ[$CellContext`cfOutput$$], 
           CreateDialog[{
             TextCell[$CellContext`cfOutput$$], 
             DefaultButton[]}, 
            WindowSize -> {$CellContext`labelX, $CellContext`labelY}], \
$CellContext`sp$$ = 
            GeneralOracleBack`CalcShortestPath[$CellContext`gr, \
$CellContext`inputActor1$$, $CellContext`inputActor2$$]; 
           NotebookClose[$CellContext`outputWindow]; \
$CellContext`outputWindow = CreateDocument[{
               Dynamic[
                GeneralOracleBack`displaySolution[$CellContext`sp$$]], 
               Print["Distance between actors is ", Length[
                  Part[$CellContext`sp$$, "entityPath"]] - 1]}, 
              WindowSize -> {$CellContext`owX, $CellContext`owY}]]),
        Evaluator->Automatic,
        ImageSize->{100, 50},
        Method->"Preemptive"], 
       ButtonBox[
        StyleBox["\<\"Reset\"\>",
         StripOnInput->False,
         FontSize->Medium],
        Appearance->Automatic,
        ButtonFunction:>($CellContext`inputActor1$$ = \
($CellContext`inputActor2$$ = Null); $CellContext`answer$$ = 
          Null; $CellContext`seed$$ = Null; Null),
        Evaluator->Automatic,
        ImageSize->{100, 50},
        Method->"Preemptive"], 
       ButtonBox[
        StyleBox["\<\"Indovina\"\>",
         StripOnInput->False,
         FontSize->Medium],
        Appearance->Automatic,
        ButtonFunction:>(Which[$CellContext`answer$$ < -1, CreateDialog[{
              TextCell[
              "Non \[EGrave] possibile inserire valori negativi, eccezion \
fatta per -1."], 
              DefaultButton[]}, 
             WindowSize -> {$CellContext`labelX, $CellContext`labelY}]; Null, 
           
           Not[
            NumberQ[$CellContext`answer$$]], CreateDialog[{
              TextCell[
              "\[CapitalEGrave] necessario inserire un numero per provare ad \
indovinare."], 
              DefaultButton[]}, 
             WindowSize -> {$CellContext`labelX, $CellContext`labelY}]; Null, 
           True, $CellContext`inputActor1$$ = 
            CheckForm`InputCorrection[$CellContext`inputActor1$$]; \
$CellContext`inputActor2$$ = 
            CheckForm`InputCorrection[$CellContext`inputActor2$$]; \
$CellContext`cfOutput$$ = 
            CheckForm`CheckForm[$CellContext`gr, $CellContext`inputActor1$$, \
$CellContext`inputActor2$$]; If[
             StringQ[$CellContext`cfOutput$$], 
             CreateDialog[{
               TextCell[$CellContext`cfOutput$$], 
               DefaultButton[]}, 
              WindowSize -> {$CellContext`labelX, $CellContext`labelY}], \
$CellContext`sp$$ = 
              GeneralOracleBack`CalcShortestPath[$CellContext`gr, \
$CellContext`inputActor1$$, $CellContext`inputActor2$$]; Null]; 
           If[$CellContext`answer$$ == Length[
                Part[$CellContext`sp$$, "entityPath"]] - 1, CreateDialog[{
                TextCell["Complimenti, hai indovinato!"], 
                DefaultButton[]}, 
               WindowSize -> {$CellContext`labelX, $CellContext`labelY}]; 
             Null, CreateDialog[{
                TextCell["Peccato, risposta errata!"], 
                DefaultButton[]}, 
               WindowSize -> {$CellContext`labelX, $CellContext`labelY}]; 
             Null]]; Null),
        Evaluator->Automatic,
        ImageSize->{100, 50},
        Method->"Preemptive"], 
       ButtonBox[
        StyleBox["\<\"Casuale\"\>",
         StripOnInput->False,
         FontSize->Medium],
        Appearance->Automatic,
        ButtonFunction:>Which[
          Not[
           NumberQ[$CellContext`seed$$]], CreateDialog[{
             TextCell[
             "\[CapitalEGrave] necessario inserire un seed per generare \
risultati casuali."], 
             DefaultButton[]}, 
            WindowSize -> {$CellContext`labelX, $CellContext`labelY}]; Null, 
          True, $CellContext`re$$ = 
           GeneralOracleBack`RandomExtract[$CellContext`gr, \
$CellContext`seed$$]; $CellContext`inputActor1$$ = 
           Part[$CellContext`re$$, 1]; $CellContext`inputActor2$$ = 
           Part[$CellContext`re$$, 2]; Null],
        Evaluator->Automatic,
        ImageSize->{100, 50},
        Method->"Preemptive"]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{4}}, "Rows" -> {{1}}}],
    "Grid"],
   ImageSize->{900, 200}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.893219770659094*^9, 3.893220219774426*^9, 3.893220903065804*^9, 
   3.893220971124543*^9, 3.893221009004833*^9, 3.893221093777492*^9, 
   3.8932212921084538`*^9, 3.8932213434045353`*^9, 3.893221448814789*^9, 
   3.893221594407728*^9, 3.893221755057733*^9, {3.893221813271448*^9, 
   3.893221842922428*^9}, 3.893240715409546*^9, 3.893240852577015*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"049e9601-a461-4a7f-8671-94207a2cc83f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 747},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Linux x86 (64-bit) (January 31, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f0a40eb4-f91c-4156-819c-a22d067d8762"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 334, 7, 160, "Title",ExpressionUUID->"3009b2f4-301e-4fba-a648-5c205258bf66"],
Cell[917, 31, 239, 6, 53, "Subtitle",ExpressionUUID->"9a04fdf7-003b-4472-98a5-27c811e52c95"],
Cell[CellGroupData[{
Cell[1181, 41, 169, 3, 68, "Section",ExpressionUUID->"87b13a26-9a99-4cf4-9ee6-04659ff4ee8e"],
Cell[1353, 46, 1143, 19, 104, "Text",ExpressionUUID->"f084fac3-fe91-47cd-ae2c-53792a18ac82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2533, 70, 159, 3, 68, "Section",ExpressionUUID->"7e97bb09-1829-43ec-b7ca-666a6d97d2ea"],
Cell[2695, 75, 255, 4, 35, "Text",ExpressionUUID->"3f4be705-ac79-44f3-85da-4cbf163d1876"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2987, 84, 167, 3, 68, "Section",ExpressionUUID->"0ace0b0a-644a-4228-b477-4e836d644b4f"],
Cell[CellGroupData[{
Cell[3179, 91, 155, 3, 54, "Subsection",ExpressionUUID->"2c477141-b0c1-4f62-90ab-f8180c593ee7"],
Cell[3337, 96, 148, 3, 35, "Text",ExpressionUUID->"ca9f17e1-f89d-454d-b7e0-ffa3c7c7d3a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3522, 104, 153, 3, 54, "Subsection",ExpressionUUID->"662e80ad-7090-4b9a-b3e9-f63b77a8d5b6"],
Cell[3678, 109, 171, 3, 35, "Text",ExpressionUUID->"3c95bbb4-2d59-42d8-8980-2ac842429277"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3886, 117, 158, 3, 54, "Subsection",ExpressionUUID->"d7be7479-0b0f-4832-b24b-375187218438"],
Cell[4047, 122, 150, 3, 35, "Text",ExpressionUUID->"9e7a8cb4-4d1d-488e-bd65-8f29c5e63f2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4234, 130, 155, 3, 54, "Subsection",ExpressionUUID->"9d2d0105-cfb9-4fce-9a9f-503a6a1b12f7"],
Cell[4392, 135, 199, 4, 35, "Text",ExpressionUUID->"4b4a77e2-4bbd-4016-84a6-a45d9897f190"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4640, 145, 215, 4, 68, "Section",ExpressionUUID->"7f347ff3-cdf0-46be-9dc7-3b90649750f9"],
Cell[4858, 151, 572, 12, 53, "Code",ExpressionUUID->"96aa7e3f-05b8-4a39-a181-8d3c2c56c256"],
Cell[5433, 165, 1424, 27, 133, "Code",ExpressionUUID->"35d58db8-440f-4e81-a654-cd302ffa4d67"],
Cell[CellGroupData[{
Cell[6882, 196, 435, 10, 53, "Code",ExpressionUUID->"b4360295-0fd5-4bef-af1c-ecb041d72112"],
Cell[7320, 208, 6203, 140, 219, "Output",ExpressionUUID->"049e9601-a461-4a7f-8671-94207a2cc83f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

